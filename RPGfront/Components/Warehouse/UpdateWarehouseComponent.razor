@page "/warehouse/update/{id}"
@using RPGobject
@using RPGback.Controllers
@inject NavigationManager NavManager

<h3>Update Warehouse</h3>

@if (oWarehouse == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ul class="nav nav-tabs list-unstyled">
        <li class="nav-item">
            <a class="nav-link" href="/warehouse/list">Warehouse List</a>
        </li>
        <li>
            <a class="nav-link" href="/warehouse/create">+ New Warehouse</a>
        </li>
        <li>
            <a class="nav-link active" href="">Update Warehouse</a>
        </li>
    </ul>
    <EditForm Model="@oWarehouse" OnSubmit="UpdateWarehouse">
        <div class="form-group">
            <label>Name: </label>
            <InputText @bind-Value="@oWarehouse.WarehouseName" class="form-control" />
        </div>
        <div class="form-group">
            <label>Description: </label>
            <InputTextArea @bind-Value="@oWarehouse.WarehouseAddress" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Update Warehouse</button>
        <button type="button" class="btn btn-secondary" @onclick="CancelUpdate">Cancel</button>
    </EditForm>
}

@code {
    [Parameter]
    public string id { get; set; }

    private Warehouse oWarehouse;

    protected override async Task OnInitializedAsync()
    {
        oWarehouse = await WarehouseControllers.GetWarehouseByIdAsync(id);
    }

    private async void UpdateWarehouse()
    {
        await WarehouseControllers.UpdateWarehouseAsync(oWarehouse);
        NavManager.NavigateTo("/warehouse/list");
    }

    private void CancelUpdate()
    {
        NavManager.NavigateTo("/warehouse/list");
    }
}
