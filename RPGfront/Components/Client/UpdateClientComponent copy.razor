@page "/client/update/{id}"
@using RPGobject
@using RPGback.Controllers
@inject NavigationManager NavManager

<h3>Update Client</h3>

@if (oClient == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <ul class="nav nav-tabs list-unstyled">
    <li class="nav-item">
        <a class="nav-link" href="/client/list">Client List</a>
    </li>
    <li>
        <a class="nav-link" href="/client/create">New Client</a>
    </li>
    <li>
        <a class="nav-link active" href="">Update Client</a>
    </li>
    </ul>
    <EditForm Model="@oClient" OnSubmit="UpdateClient">
        <div class="form-group">
            <label>Name: </label>
            <InputText @bind-Value="@oClient.ClientName" class="form-control" />
        </div>
        <div class="form-group">
            <label>Last name: </label>
            <InputText @bind-Value="@oClient.ClientLastname" class="form-control" />
        </div>
        <div class="form-group">
            <label>Number: </label>
            <InputText @bind-Value="@oClient.Number" class="form-control" />
        </div>
        <div class="form-group">
            <label>Email: </label>
            <InputText @bind-Value="@oClient.Email" class="form-control" />
        </div>
        <button type="submit" class="btn btn-primary">Update Client</button>
        <button type="button" class="btn btn-secondary" @onclick="CancelUpdate">Cancel</button>
    </EditForm>
}

@code {
    [Parameter]
    public string id { get; set; }

    private Client oClient;

    protected override async Task OnInitializedAsync()
    {
        oClient = await ClientControllers.GetClientByIdAsync(id);
    }

    private async void UpdateClient()
    {
        await ClientControllers.UpdateClientAsync(oClient);
        NavManager.NavigateTo("/client/list");
    }

    private void CancelUpdate()
    {
        NavManager.NavigateTo("/client/list");
    }
}
